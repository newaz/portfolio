/* Ability */
.Skills-content {
    margin: 130px auto 60px;
    width: 90%;
    color: $mainBlack;
    text-transform: lowercase;
    @media #{$min-740} {
		font-size: 20px;
	}
}

.abilities {
    list-style: none;
    margin: 60px auto;
    text-align: left;
    li {
        margin-bottom: 0.5em;
        padding: 0.5em 1em;
        color: $darkOliveGreen1;
    }
}

/* Anything that starts with class of .ability */

[class^="ability-"] {
    position: relative;

    &:before,
    &:after {
        position: absolute;
        content: '';
    }
    &:before {
        top: 0.5em;
        margin-left: -2.3em;
        text-align: right;
        color: $darkOliveGreen1;
    }
    &:after {
        top: 0;
        left: 0;
        height: 100%;
        width: 0;
        background: $lightCoral;
        z-index: -1;
        //padding-right: 0;
    }
}

[class^="ability-digital-photography"],
[class^="ability-keynote"] {
    &:before {
        margin-left: -2.8em;
    }
}

/* create a map variable for abilities. this is so we can have a key and a value pair. */

$abilities: (
    'html5': 95,
    'css3': 95,
    'postcss': 90,
    'sass': 90,
    'javascript': 80,
    'react': 50,
    'npm': 85,
    'node-js': 60,
    'git': 85,
    'static': 95,
    'command-line': 85,
    'markdown': 90,
    'technical-writing': 85,
    'photoshop': 95,
    'illustrator': 95,
    'digital-photography': 100,
    'keynote': 100
);

/* create animation for each ability for width */

@each $ability, $score in $abilities {
    @keyframes show-ability-#{$ability} {
        from { width: 0; }
        to { width: $score * 1%; }
    }
    .ability-#{$ability} {
        &:before {
            content: '#{$score}%';
            left: $score * 1%;
        }
        &:after {
            animation: show-ability-#{$ability} ease-in-out 02s 0.5s 1;
            animation-fill-mode: forwards;
        }
    }
}
